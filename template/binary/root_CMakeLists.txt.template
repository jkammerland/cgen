cmake_minimum_required(VERSION 3.28 FATAL_ERROR)

project(@PROJECT_NAME@
  VERSION @PROJECT_VERSION@
  DESCRIPTION "@PROJECT_DESCRIPTION@"
  LANGUAGES CXX
)

set(${PROJECT_NAME}_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "Root directory of ${PROJECT_NAME}")
set(CURRENT_ROOT_DIR ${${PROJECT_NAME}_ROOT_DIR})

message(STATUS "${PROJECT_NAME}:<${PROJECT_VERSION}>, using cmake:<${CMAKE_VERSION}>")

# Set C++ standard to C++@CPP_STANDARD@
set(CMAKE_CXX_STANDARD @CPP_STANDARD@)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Find dependencies using find_package
find_package(fmt REQUIRED)

# Add subdirectories
add_subdirectory(src)

# Package configuration
include(GNUInstallDirs)

# Installation targets
install(TARGETS ${PROJECT_NAME}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

# CPack configuration
set(CPACK_PACKAGE_NAME "@PROJECT_NAME@")
set(CPACK_PACKAGE_VENDOR "@PROJECT_VENDOR@")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "@PROJECT_DESCRIPTION@")
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_PACKAGE_INSTALL_DIRECTORY "@PROJECT_NAME@")
set(CPACK_PACKAGE_CONTACT "@PROJECT_CONTACT@")

include(CPack)